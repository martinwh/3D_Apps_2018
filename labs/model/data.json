{
    "pageTextData": [
		{
		"title": "Laboratory 1",
		"subTitle": " ",		
		"description": "This laboratory is largely focused on acquiring the skills needed to create a responsive mobile first web page that you will use as an initial template, i.e. HTML5 and CSS3 resource, for your basic 3D App that you will create in Lab 4 and 5. You will integrate your 3D models created in Lab 2 and 3 into this template, thus creating a basic 3D App. To do this, you will utilise Bootstrap 4's fluid grid method for this responsive mobile first web page. In previous years we used the Adobe Dreamweaver fluid grid system and its associated IDE. However, for 2018 you will be using a lightweight code editor, such as NotePad++, Brackets, Sublime Text, Atom or Visual Studio Code — specifically, all the lab tutorials are now converted to use Visual Studio Code (VSCode) and Bootstrap 4. When last checked, the lab machines have NotePad++, Brackets, Sublime Text, and Visual Studio Code installed. However, you are free to use other tools and frontend framworks as you wish, subject to certain restrictions outlined in the tutorial, i.e. you have to design your own HTML5/CSS template."

		},
		{
		"title": "Laboratory 2",
		"subTitle": " ",		
		"description": "This laboratory introduces Autodesk 3ds Max 2017 and the basic principles of 3D modelling and texturing required for this particular module. This lab work is focused on acquiring the skills needed to create, i.e. model, texture, illuminate and visualise 3D models suitable for rendering in a responsive mobile first web 3D application — a 3D App. This means that your 3D models can only exploit 3ds Max standard materials and lights, i.e. you can not use any photorealistic methods. Your Coke, Sprite and Pepper models are assessed in the Part 1 Assignment for undergraduates. The Sprite bottle is meant to represent, roughly, the sort of geometrical complexity we expect for your final assignment models — the image above shows the Sprite bottle broken down into component parts with materials and textures applied. The images below, which you can expand into a lightbox, show the sort of results you can obtain. You should note that you do not necessarily need to have transparency effects for your final assignmment, but clearly you should get the best model rendering effects you can while working with standard materials, etc."
		},
		{
		"title": "Laboratory 3",
		"subTitle": " ",		
		"description": "This laboratory focuses on understanding a specific workflow (there are others) that allows you to export your 3ds Max models into VRML97 (virtual reality modelling language) model, which enables you to test that your models will eventually render in a responsive mobile first web 3D application. We then convert your VRML97 models into an X3D format suitable for rendering in the HTML5 Document Object Model. To do this we use a technology called X3DOM that allows us to \"Integrate 3D content seamlessly into your 3D App - the scene is directly written into the HTML markup with no plugins needed — simply include a javascript file\". This is quite a crucial step, your 3D VRML models must be converted to inline X3D to work in your 3D App. You do not need to undertsand the 'nuts and bolts' of VRML97 or X3D, but these languages are human readable, so with a little curiosity you can shorten the workflow process by modifying your X3D code. A typical example might be to set up your cameras and lights once, and use the same exported/converted code for all models. Click on the thumbnails below to see the X3D models" 
		},
        {
		"title": "Laboratory 4",
		"subTitle": " ",		
		"description": "This laboratory is focused on converting your Lab 1 Coca Cola branded responsive mobile first template into a version that embeds (or writes) your Lab 3 models as inline X3D models directly into the HTML5 DOM. In Lab 3 you will have tested that your 3D models render as both X3D (i.e. renders in an X3D viewer) and X3DOM (i.e. X3D models in an HTML5 web page). In this Lab 4 you will adapt your HTML5 and CSS3 code to create the layout and styling for three more responsive mobile web 3D App pages, one each for your coke, sprite and pepper models. You will exploiit some of the Bootsrap 4 componets, such as the .card class, to achive a reasonable 3D App layput. You will then link you 4 pages together into a basic 3D App, while also creating the basic layout to interact with your 3D models, e.g. include a panel to change cameras, animate the model, and so on. In Lab 5 we will connect up the camera and animation buttons."
        },
		{
		"title": "Laboratory 5",
		"subTitle": " ",		
		"description": "This laboratory is focused on refining your Lab 4 HTML5 and CSS3 based responsive mobile template (3D App) to introduce interactivity with some simple JavaScript functions that, for example: 1) converts your 3D App into a single page application (using some simple JavaScript content swap code), 2) dynamically restyles the 3D App (using the document.getElementById() function), and 3) builds in a JavaScript (exploiting XMLHttpRequest) and PHP based image gallery that could be exploited to load new models, or trigger the content swap, or simplay act as a 3D Image gallery, amongst other uses. This will be your first introduction to PHP with the image gallery, and incidentally AJAX (Asynchronous JavaScript and XML) using the XMLHttpRequest object to request data from the server. Not forgetting, in Lab 5 we will also connect up your cameras, lights and simple animations to the 3D App interaction panel."
		},
		{
		"title": "Laboratory 6",
		"subTitle": " ",		
		"description": "This laboratory introduces you to more AJAX, which we use to dynamically update content on your 3D App. In Lab 5, you already used AJAX to build the gallery code, which used the XMLHttpRequest object to asynchronously request filenames from the web server using a PHP hook. JavaScript runs continously on the client-side, while the PHP has to be invoked. In Lab 6 we extend the use of AJAX to make asynchronous requests for content from the server, where for simplicity the data is stord in a JSON file. You will exploit JQuery's .getJSON() method to get data from the server. Note, your Lab 4 and 5 3D App versions instantiatesd three X3D renderers, which utilises more resource than is necessary — can fail. Your Lab 6 version instantiates 1 X3D renderer and switchs in and out different scenes. You should tidy up your code, e.g. X3D scene switching, perhaps use PHP to include the header and footer, etc."
		},
		{
		"title": "Laboratory 7",
		"subTitle": " ",		
		"description": " "
		},
        {
		"title": "Laboratory 8",
		"subTitle": " ",		
		"description": " "
        },
		{
		"title": "Laboratory 9",
		"subTitle": " ",		
		"description": " "
		},
		{
		"title": "Mobile Web 3D Applications",
		"subTitle": "Live Feedback Site",		
		"description": "The main goal of this 3D App site is to provide LIVE FEEDBACK on the laboratory results on a week by week basis. Here, you will find example results that you can study up to week 6. The idea is that, while completing the labs, if you get stuck, you can examine this site for the expected results, your results may be slightly different depending on your design elements, e.g. CSS3, you may have a better model, etc., and if needed you can use Chrome's Developer Tools to dig further to examine the code."

		}
	]
}